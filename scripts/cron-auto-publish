#!/bin/bash
#########################################################################################
#
# This script runs as a cron job. It looks in S3 for the most recent, unpublished
# episode mp3 file, uploads it to the server, and creates a GitHub PR for the
# episode.
#
# How doe it work?
#   1. It looks at the RSS feed to determine the most recent published episode number.
#   2. It looks in S3 for the *next* episode by adding 1 to the most recent episode number.
#   3. It runs the `upload` script on that file.
#
# What if the file isn't in S3?
#   The script will print an error to stdout and exit with a non-zero exit code
#
# How does the mp3 file get to S3?
#   A Zapier zap copies the file from Google Drive (the "SSE Edited Episodes" folder) to S3.
#
# How does the mp3 file get into Google Drive?
#   The editors manually put the mp3 into Google Drive after editing. They must follow the
#   naming convention `sse-XXX.mp3` for this automation to find the file.
#
# What's the cron entry?
#
#   45 6 * * MON /home/dave/soft-skills-engineering/website/scripts/cron-auto-publish
#   # This runs at 4:45am MT on Mondays (server is on east coast time)
#
##########################################################################################

cd "$(dirname "$0")"

tmpdir=$(mktemp -d -t sse-XXXXXXXXXX)
exit_code=0

latest_published_epispode_number=$(curl --silent --fail 'http://softskills.audio/feed.xml' \
        | egrep 'sse-[0-9]+\.mp3' \
        | sed -e 's/.*sse-//' \
        | sed -e 's/\.mp3.*//' \
        | sort -n \
        | tail -n 1)

episode_number_to_publish=$((latest_published_epispode_number + 1))
mp3_file_base_name="sse-$episode_number_to_publish.mp3"
mp3_downloaded_absolute_file_path="$tmpdir/$mp3_file_base_name"
s3_bucket_url="https://s3-bucket-us-west-1-public-podcast-episodes.s3-us-west-1.amazonaws.com/$mp3_file_base_name"

curl --fail --silent "$s3_bucket_url" > "$mp3_downloaded_absolute_file_path"
ret=$?

if [ "$ret" = 0 ]; then
    if file "$mp3_downloaded_absolute_file_path" | grep -i -E '(audio file|MPEG.*layer III)' >/dev/null; then
        ./upload --unattended "$mp3_downloaded_absolute_file_path"
    else
        exit_code=1
        echo
        echo "Error: downloaded mp3 file is not an audio file"
        echo
        file "$mp3_downloaded_absolute_file_path"
        echo
    fi
else
    exit_code=2
    echo
    echo "Error: Episode $episode_number_to_publish is not in S3 yet."
    echo
    echo "Searched for it here: $s3_bucket_url"
    echo
fi

rm -rf "$tmpdir"
exit $exit_code
